% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim_refit.R
\name{optim_refit}
\alias{optim_refit}
\title{Refined optimization test.}
\usage{
optim_refit(xsol, fun, maximize = TRUE, maxit = 5000, reltol = 1e-08)
}
\arguments{
\item{xsol}{Potential solution vector of length \code{nx}.}

\item{fun}{Objective function to be maximized (or minimized), with first argument the length-\code{nx} parameter vector over which optimization is to take place.  Should return a scalar result.}

\item{maximize}{Logical, whether a maximum or a minimum of the objective function is sought.}

\item{maxit}{Maximum number of iterations for second optimization (see Details).}

\item{reltol}{Relative tolerance for convergence of second optimization (see Details).}
}
\value{
An object of class \code{optrefit} inheriting from \code{optcheck}, with elements:
\describe{
  \item{\code{xsol}}{The potential solution.}
  \item{\code{ysol}}{The value of \code{fun(xsol)}.}
  \item{\code{maximize}}{Logical indicating whether the potential solution should maximize or minimize the objective function.}
  \item{\code{xopt}}{The solution found by the general-purpose optimizer.}
  \item{\code{yopt}}{The function value at the optimal solution, i.e., \code{fun(xopt)}.}
}
}
\description{
If the potential solution is indeed a local optimum of the objective function, and if it is used to initialize a second optimization, then original and "refined" solutions ought to be close.
}
\details{
This is simply a wrapper to the \code{\link[stats]{optim}} function using the Nelder-Mead method, with tuning to search for a high-precision solution when a good initial value is supplied (i.e., \code{xsol}).
}
\seealso{
\code{summary}, \code{print}, and \code{diff} for \code{optrefit} objects are available; see \code{\link{summary.optrefit}}, \code{\link{print.optrefit}}, and \code{\link{diff.optrefit}}.
}
